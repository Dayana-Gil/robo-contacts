{"version":3,"sources":["components/card/ card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","list","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredList","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAK,wBAA0BH,EAAMI,KAAKC,GAAK,2BAC/D,mCAAML,EAAMI,KAAKE,KAAjB,OACA,kCAAKN,EAAMI,KAAKG,MAAhB,WCFKC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAY,YAAjB,SAEQD,EAAMI,KAAKK,KAAK,SAAAL,GAAI,OAChB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCPnBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCHG,G,wDApCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAdvC,EAAKC,MAAQ,CACXjB,KAAM,GACNc,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEb,KAAOsB,S,oBAOxC,WAAU,IAAD,EACuBC,KAAKN,MAA3BjB,EADD,EACCA,KAAMc,EADP,EACOA,YACRU,EAAexB,EAAKyB,QAAO,SAAAzB,GAAI,OACnCA,EAAKE,KAAKwB,cAAcC,SAASb,EAAYY,kBAG/C,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUR,KAAOwB,W,GAjCPI,cCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9eacbf4c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.style.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"list\" src={'https://robohash.org/' + props.list.id + '?set=set2&size=180x180'} />\n        <h2> {props.list.name} </h2>\n        <p> {props.list.email} </p> \n    </div>\n);","import React from 'react';\n\nimport { Card } from '../card/ card.component';\n\nimport './card-list.style.css';\n\nexport const CardList = props => (\n\n    <div className = 'card-list'>\n        { \n            props.list.map( list => (\n                <Card key={list.id} list={list} />\n            ))\n        }  \n    </div>\n);","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n        className='search'\n        type='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n);","\nimport React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\n// import logo from './logo.svg'; NO LOGO\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ list : users }));\n  }\n\n\n  handleChange = e => {\n    this.setState({ searchField : e.target.value });\n  }\n  render() {\n    const { list, searchField } = this.state;\n    const filteredList = list.filter(list => \n      list.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Robo - Contacts</h1>\n        <SearchBox \n          placeholder='search contacts'\n          handleChange={this.handleChange}\n        />\n        <CardList list= {filteredList} />\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}